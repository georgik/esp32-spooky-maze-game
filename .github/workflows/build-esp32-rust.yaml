name: Build ESP32 Rust Binaries and Upload to Releases

on:
  workflow_dispatch:
    inputs:
      release_tag:
        description: "Upload to specific release"
        required: true
        default: 'v0.4.0'

jobs:
  get_release:
    name: Get release
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.get_upload_url.outputs.url }}
    steps:
      - uses: octokit/request-action@v2.x
        id: get_release
        with:
          route: GET /repos/{owner}/{repo}/releases/tags/${{ github.event.inputs.release_tag }}
          owner: georgik
          repo: esp32-spooky-maze-game
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: get upload url
        id: get_upload_url
        run: |
          url=$(echo "$response" | jq -r '.upload_url' | sed 's/{?name,label}//')
          echo "::set-output name=url::$url"
        env:
          response: ${{ steps.get_release.outputs.data }}

  build:
    runs-on: ubuntu-20.04
    container:
      image: espressif/idf-rust:all_1.71.0.1
      options: --user esp --workdir /home/esp
    needs: get_release
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Build and Upload ESP32 Rust Binaries
        run: |
          export HOME=/home/esp
          for dir in esp-wrover-kit esp32-s2-kaluga esp32-s3-usb-otg esp32-s3-box m5stack-core2 m5stack-fire; do
            cd $dir
            VERSION=$(grep -oP 'version\s*=\s*"\K[^"]+' Cargo.toml)
            CHIP=$(grep -oP 'hal\s*=\s*\{\s*package\s*=\s*"\K[^"]+' Cargo.toml | sed 's/-hal//')
            BIN_NAME="spooky-maze-${dir}-${VERSION}.bin"
            cargo espflash save-image --chip ${CHIP} --release --merge ${BIN_NAME}
            asset_path="/home/esp/project/${dir}/${BIN_NAME}"
            curl --fail -X POST -H "Authorization: token ${{ secrets.GITHUB_TOKEN }}" -H "Content-Type: application/octet-stream" --data-binary @$asset_path "${{ needs.get_release.outputs.upload_url }}?name=${BIN_NAME}"
            cd ..
          done
